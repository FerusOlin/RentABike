<?xml version='1.0' encoding='utf-8'?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2010, Red Hat Inc. or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

  <session-factory>
    <!-- Database connection settings -->
    <property name="format_sql">true</property>
    <property name="dialect">org.hibernate.dialect.HSQLDialect</property>
    <property name="connection.driver_class">org.sqlite.JDBC</property>
    <property name="connection.url">jdbc:sqlite:RentABike.sql</property>
    <property name="connection.username"/>
    <property name="connection.password"/>
    <!-- JDBC connection pool (use the built-in) -->
    <property name="connection.pool_size">10</property>
    <!-- SQL dialect
        <property name="dialect">org.hibernate.dialect.H2Dialect</property>
-->
    <!-- Disable the second-level cache  -->
    <property name="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</property>
    <!-- Echo all executed SQL to stdout -->
    <property name="show_sql">true</property>
    <!-- Drop and re-create the database schema on startup -->
    <property name="hbm2ddl.auto">update</property>
    
    <!-- Names the annotated entity class -->
    <mapping class="de.fhwedel.delivery.model.Accessoires"></mapping>
    <mapping class="de.fhwedel.delivery.model.Address"></mapping>
    <mapping class="de.fhwedel.delivery.model.Bike"></mapping>
    <mapping class="de.fhwedel.delivery.model.Chainlock"></mapping>
    <mapping class="de.fhwedel.delivery.model.Child"></mapping>
    <mapping class="de.fhwedel.delivery.model.Customer"></mapping>
    <mapping class="de.fhwedel.delivery.model.Defect"></mapping>
    <mapping class="de.fhwedel.delivery.model.Employee"></mapping>
    <mapping class="de.fhwedel.delivery.model.Female"></mapping>
    <mapping class="de.fhwedel.delivery.model.Helmet"></mapping>
    <mapping class="de.fhwedel.delivery.model.InStore"></mapping>
    <mapping class="de.fhwedel.delivery.model.Item"></mapping>
    <mapping class="de.fhwedel.delivery.model.Male"></mapping>
    <mapping class="de.fhwedel.delivery.model.Online"></mapping>
    <mapping class="de.fhwedel.delivery.model.OnlineAccess"></mapping>
    <mapping class="de.fhwedel.delivery.model.Person"></mapping>
    <mapping class="de.fhwedel.delivery.model.Promotion"></mapping>
    <mapping class="de.fhwedel.delivery.model.RentingOrder"></mapping>
    <mapping class="de.fhwedel.delivery.model.Trailer"></mapping>
  </session-factory>

</hibernate-configuration>